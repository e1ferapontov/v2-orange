#Overrides of /klipper/klippy/extras/display/menu.cfg

##########DISABLEMENTS##########
[menu __main __octoprint]
type: disabled

[menu __main __sdcard]
type: disabled

[menu __main __control __fanonoff]
type: disabled

[menu __main __control __caselightonoff]
type: disabled

[menu __main __control __move_01mm]
type: disabled

[menu __main __control __move_1mm]
type: disabled

[menu __main __temp __preheat_pla]
type: disabled

[menu __main __setup]
type: disabled
################################


#OVERRIDE INPUT_STEP DISTANCE
[menu __main __tune __offsetz]
type: input
name: Offset Z:{'%05.3f' % menu.input}
input: {printer.gcode_move.homing_origin.z}
input_min: -5
input_max: 5
input_step: 0.01
realtime: True
gcode:
  SET_GCODE_OFFSET Z={'%.3f' % menu.input} MOVE=1

#OVERRIDE FILAMENT MACROS / DISABLE "SLOW" VERSIONS
[menu __main __filament __loads]
type: disabled
	
[menu __main __filament __unloads]
type: disabled

[menu __main __filament __loadf]
type: input
name: Load F: {menu.input}
input: 230
input_min: 180
input_max: 270
input_step: 10
gcode:
  HOT_LOAD T={menu.input}
	
[menu __main __filament __unloadf]
type: input
name: Unload F: {menu.input}
input: 230
input_min: 180
input_max: 270
input_step: 10
gcode:
    HOT_UNLOAD T={menu.input}


[menu __main __filament __cleannozzle]
type: command
name: Clean nozzle
gcode: NOZZLE_CLEANER__CLEAN
	
# OVERRIDE CASELIGHT
[menu __main __lights]
type: list
name: Lights

[menu __main __lights __caselightdark]
type: command
name: Caselight dark
gcode: DARK_LED

[menu __main __lights __caselightwhite]
type: command
name: Caselight bright
gcode: LED

[menu __main __lights __nozzleon]
type: command
name: Nozzle on
gcode: set_nozzle_leds_on

[menu __main __lights __nozzleoff]
type: command
name: Nozzle off
gcode: set_nozzle_leds_off



[menu __main __printing]
type: list
enable: {printer.idle_timeout.state == "Printing" or printer.print_stats.state == "paused"}
name: Print job

[menu __main __printing __resume]
type: command
enable: {('virtual_sdcard' in printer) and printer.print_stats.state == "paused"}
name: Resume printing
gcode:
    {% if "pause_resume" in printer %}
        RESUME
    {% else %}
        M24
    {% endif %}

[menu __main __printing __pause]
type: command
enable: {('virtual_sdcard' in printer) and printer.print_stats.state == "printing"}
name: Pause printing
gcode:
    {% if "pause_resume" in printer %}
        PAUSE
    {% else %}
        M25
    {% endif %}

[menu __main __printing __cancel]
type: command
enable: {('virtual_sdcard' in printer) and (printer.print_stats.state == "printing" or printer.print_stats.state == "paused")}
name: Cancel printing
gcode:
    {% if 'pause_resume' in printer %}
        CANCEL_PRINT
    {% else %}
        M25
        M27
        M26 S0
        TURN_OFF_HEATERS
        {% if printer.toolhead.position.z <= printer.toolhead.axis_maximum.z - 5 %}
            G91
            G0 Z5 F1000
            G90
        {% endif %}
    {% endif %}
	
# ADDITIONAL CONTROL COMMANDS

[menu __main __control __QGL]
type: command
enable: {not printer.idle_timeout.state == "Printing"}
name: QGL
gcode: QUAD_GANTRY_LEVEL

[menu __main __control __parkcenter]
type: command
enable: {not printer.idle_timeout.state == "Printing"}
name: Park center
gcode: PARKCENTER

# [menu __main __control __exhaustspeed]
# type: input
# name: Exhaust: {'ON ' if menu.input else 'OFF'}
# input: {printer['output_pin exhaust_fan'].value}
# input_min: 0
# input_max: 1
# input_step: 1
# realtime: True
# gcode:
#   SET_PIN PIN=exhaust_fan VALUE={menu.input}

[menu __main __temp __heatsoak]
type: input
name: Heatsoak: {menu.input}
input: 118
input_min: 80
input_max: 118
input_step: 10
gcode:
    SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={menu.input}
    SET_IDLE_TIMEOUT TIMEOUT=43200
    SET_FAN_SPEED FAN=BedFans SPEED=1
    